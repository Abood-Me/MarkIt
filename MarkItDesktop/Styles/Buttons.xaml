<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/Colors.xaml"/>
        <ResourceDictionary Source="/Styles/Fonts.xaml"/>
        <ResourceDictionary Source="/Styles/Texts.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource JosefinRegular}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
                            Background="Transparent"
                            >
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" 
                            Content="{TemplateBinding Content}"
                            />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BackgroundDarkBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource JosefinLight}" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Foreground="{TemplateBinding Foreground}" 
                               Text="{TemplateBinding Content}"
                               FontFamily="{TemplateBinding FontFamily}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BackgroundDarkBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InverseLinkButton" TargetType="Button" BasedOn="{StaticResource LinkButton}">
        <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BackgroundDimBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TodoCheck" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="1" 
                                Padding="5"
                                CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource PrimaryBrush}" Margin="1" Opacity="0" Stretch="UniformToFill"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{StaticResource BackgroundDimBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource JosefinRegular}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeXLarge}" />
        <Setter Property="Padding" Value="60 10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="0">
                        <Border.Effect>
                            <DropShadowEffect Color="{StaticResource PrimaryColor}" 
                                              BlurRadius="10" 
                                              Direction="270" 
                                              ShadowDepth="2"
                                              Opacity="0.5"/>
                        </Border.Effect>
                        <TextBlock Text="{TemplateBinding Content}" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   IsHitTestVisible="False"
                                   x:Name="Content"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.States>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource ForegroundLightColor}" />
                                            <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground.Color" To="{StaticResource BackgroundDimColor}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Normal" />
                                    <VisualState Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetProperty="Background.Color" To="{StaticResource BackgroundDimColor}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground.Color" To="{StaticResource ForegroundLightColor}" />
                                            <ColorAnimation Duration="0" Storyboard.TargetProperty="Background.Color" To="{StaticResource BackgroundDimColor}" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup.States>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:00:00.150" />
                                    <VisualTransition To="Pressed" GeneratedDuration="0:00:00" />
                                    <VisualTransition To="Disabled" GeneratedDuration="0:00:00" />
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>